%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(r) 6.0%%For: (Tim) ()%%Title: (14400199)%%CreationDate: (06/08/98) (02:44 pm)%%BoundingBox: 107 348 491 526%%HiResBoundingBox: 107.6 354.0887 490.7406 519.4127%%DocumentProcessColors: Black%%DocumentFonts: Helvetica%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.0 0%%+ procset Adobe_typography_AI5 1.0 0%%+ procset Adobe_Illustrator_AI6_vars Adobe_Illustrator_AI6%%+ procset Adobe_Illustrator_AI5 1.0 0%AI5_FileFormat 2.0%AI3_ColorUsage: Black&White%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set)%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 ()%AI3_TemplateBox: 306 396 306 396%AI3_TileBox: 33 0 578 792%AI3_DocumentPreview: Header%AI5_ArtSize: 595 842%AI5_RulerUnits: 2%AI5_ArtFlags: 1 0 0 1 0 0 1 1 1%AI5_TargetResolution: 800%AI5_NumLayers: 2%AI5_OpenToView: 18 604 1.5 1013 719 58 1 1 2 40%AI5_OpenViewLayers: 77%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 %%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 23 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			5 packedarray		} bind def		/setcustomcolor		{			exch aload pop pop			4			{				4 index mul 4 1 roll			} repeat			5 -1 roll pop			setcmykcolor		}		def	} if		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	level2?	{		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore		add add add 4 eq	}	{		1 0 0 0 testCMYKColorThrough		0 1 0 0 testCMYKColorThrough		0 0 1 0 testCMYKColorThrough		0 0 0 1 testCMYKColorThrough		and and and	} ifelse	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginResource: procset Adobe_typography_AI5 1.0 1%%Title: (Typography Operators)%%Version: 1.0 %%CreationDate:(03/26/93) ()%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_typography_AI5 54 dict dup beginput/initialize{ begin begin	Adobe_typography_AI5 begin	Adobe_typography_AI5	{		dup xcheck		{			bind		} if		pop pop	} forall end end end	Adobe_typography_AI5 begin} def/terminate{	currentdict Adobe_typography_AI5 eq	{	 end	} if} def/modifyEncoding{	/_tempEncode exch ddef	/_pntr 0 ddef	{		counttomark -1 roll		dup type dup /marktype eq		{			pop pop exit		}		{			/nametype eq			{				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll				put			}			{				/_pntr exch ddef			} ifelse		} ifelse	} loop	_tempEncode} def/TE{	StandardEncoding 256 array copy modifyEncoding	/_nativeEncoding exch def} def%/TZ{	dup type /arraytype eq	{		/_wv exch def	}	{		/_wv 0 def	} ifelse	/_useNativeEncoding exch def	pop pop	findfont _wv type /arraytype eq	{		_wv makeblendedfont	} if	dup length 2 add dict begin	mark exch	{		1 index /FID ne		{			def		} if		cleartomark mark	} forall	pop	/FontName exch def	counttomark 0 eq	{		1 _useNativeEncoding eq		{			/Encoding _nativeEncoding def		} if		cleartomark	}	{		/Encoding load 256 array copy		modifyEncoding /Encoding exch def	} ifelse	FontName currentdict end	definefont pop} def/tr{	_ax _ay 3 2 roll} def/trj{	_cx _cy _sp _ax _ay 6 5 roll} def/a0{	/Tx	{		dup		currentpoint 3 2 roll		tr _psf		newpath moveto		tr _ctm _pss	} ddef	/Tj	{		dup		currentpoint 3 2 roll		trj _pjsf		newpath moveto		trj _ctm _pjss	} ddef} def/a1{	/Tx	{		dup currentpoint 4 2 roll gsave		dup currentpoint 3 2 roll		tr _psf		newpath moveto		tr _ctm _pss		grestore 3 1 roll moveto tr sp	} ddef	/Tj	{		dup currentpoint 4 2 roll gsave		dup currentpoint 3 2 roll		trj _pjsf		newpath moveto		trj _ctm _pjss		grestore 3 1 roll moveto tr jsp	} ddef} def/e0{	/Tx	{		tr _psf	} ddef	/Tj	{		trj _pjsf	} ddef} def/e1{	/Tx	{		dup currentpoint 4 2 roll gsave		tr _psf		grestore 3 1 roll moveto tr sp	} ddef	/Tj	{		dup currentpoint 4 2 roll gsave		trj _pjsf		grestore 3 1 roll moveto tr jsp	} ddef} def/i0{	/Tx	{		tr sp	} ddef	/Tj	{		trj jsp	} ddef} def/i1{	W N} def/o0{	/Tx	{		tr sw rmoveto	} ddef	/Tj	{		trj swj rmoveto	} ddef} def/r0{	/Tx	{		tr _ctm _pss	} ddef	/Tj	{		trj _ctm _pjss	} ddef} def/r1{	/Tx	{		dup currentpoint 4 2 roll currentpoint gsave newpath moveto		tr _ctm _pss		grestore 3 1 roll moveto tr sp	} ddef	/Tj	{		dup currentpoint 4 2 roll currentpoint gsave newpath moveto		trj _ctm _pjss		grestore 3 1 roll moveto tr jsp	} ddef} def/To{	pop _ctm currentmatrix pop} def/TO{	iTe _ctm setmatrix newpath} def/Tp{	pop _tm astore pop _ctm setmatrix	_tDict begin	/W	{	} def	/h	{	} def} def/TP{ end	iTm 0 0 moveto} def/Tr{	_render 3 le	{		currentpoint newpath moveto	} if	dup 8 eq	{		pop 0	}	{		dup 9 eq		{			pop 1		} if	} ifelse	dup /_render exch ddef	_renderStart exch get load exec} def/iTm{	_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale} def/Tm{	_tm astore pop iTm 0 0 moveto} def/Td{	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto} def/iTe{	_render -1 eq	{	}	{		_renderEnd _render get dup null ne		{			load exec		}		{			pop		} ifelse	} ifelse	/_render -1 ddef} def/Ta{	pop} def/Tf{	dup 1000 div /_fScl exch ddef%	selectfont} def/Tl{	pop	0 exch _leading astore pop} def/Tt{	pop} def/TW{	3 npop} def/Tw{	/_cx exch ddef} def/TC{	3 npop} def/Tc{	/_ax exch ddef} def/Ts{	/_rise exch ddef	currentpoint	iTm	moveto} def/Ti{	3 npop} def/Tz{	100 div /_hs exch ddef	iTm} def/TA{	pop} def/Tq{	pop} def/Th{	pop pop pop pop pop} def/TX{	pop} def/Tk{	exch pop _fScl mul neg 0 rmoveto} def/TK{	2 npop} def/T*{	_leading aload pop neg Td} def/T*-{	_leading aload pop Td} def/T-{	_ax neg 0 rmoveto	_hyphen Tx} def/T+{} def/TR{	_ctm currentmatrix pop	_tm astore pop	iTm 0 0 moveto} def/TS{	currentfont 3 1 roll	/_Symbol_ _fScl 1000 mul selectfont		0 eq	{		Tx	}	{		Tj	} ifelse	setfont} def/Xb{	pop pop} def/Tb /Xb load def/Xe{	pop pop pop pop} def/Te /Xe load def/XB{} def/TB /XB load defcurrentdict readonly popendsetpacking%%EndResource%%BeginProcSet: Adobe_ColorImage_AI6 1.0 0userdict /Adobe_ColorImage_AI6 known not{	userdict /Adobe_ColorImage_AI6 17 dict put } ifuserdict /Adobe_ColorImage_AI6 get begin		/initialize	{ 		Adobe_ColorImage_AI6 begin		Adobe_ColorImage_AI6		{			dup type /arraytype eq			{				dup xcheck				{					bind				} if			} if			pop pop		} forall	} def	/terminate { end } def		currentdict /Adobe_ColorImage_AI6_Vars known not	{		/Adobe_ColorImage_AI6_Vars 14 dict def	} if		Adobe_ColorImage_AI6_Vars begin		/channelcount 0 def		/sourcecount 0 def		/sourcearray 4 array def		/plateindex -1 def		/XIMask 0 def		/XIBinary 0 def		/XIChannelCount 0 def		/XIBitsPerPixel 0 def		/XIImageHeight 0 def		/XIImageWidth 0 def		/XIImageMatrix null def		/XIBuffer null def		/XIDataProc null def end		/WalkRGBString null def	/WalkCMYKString null def		/StuffRGBIntoGrayString null def	/RGBToGrayImageProc null def	/StuffCMYKIntoGrayString null def	/CMYKToGrayImageProc null def	/ColorImageCompositeEmulator null def		/SeparateCMYKImageProc null def		/FourEqual null def	/TestPlateIndex null def		currentdict /_colorimage known not	{		/colorimage where		{			/colorimage get /_colorimage exch def		}		{			/_colorimage null def		} ifelse	} if		/_currenttransfer systemdict /currenttransfer get def		/colorimage null def	/XI null def			/WalkRGBString	{		0 3 index			dup length 1 sub 0 3 3 -1 roll		{			3 getinterval { } forall				5 index exec				3 index		} for				 5 { pop } repeat		} def			/WalkCMYKString	{		0 3 index			dup length 1 sub 0 4 3 -1 roll		{			4 getinterval { } forall						6 index exec						3 index					} for				5 { pop } repeat			} def			/StuffRGBIntoGrayString	{		.11 mul exch				.59 mul add exch				.3 mul add				cvi 3 copy put				pop 1 add	} def			/RGBToGrayImageProc	{			Adobe_ColorImage_AI6_Vars begin 			sourcearray 0 get exec			dup length 3 idiv string			dup 3 1 roll 						/StuffRGBIntoGrayString load exch			WalkRGBString	 end	} def			/StuffCMYKIntoGrayString	{		exch .11 mul add				exch .59 mul add				exch .3 mul add				dup 255 gt { pop 255 } if				255 exch sub cvi 3 copy put				pop 1 add	} def			/CMYKToGrayImageProc	{			Adobe_ColorImage_AI6_Vars begin			sourcearray 0 get exec			dup length 4 idiv string			dup 3 1 roll 						/StuffCMYKIntoGrayString load exch			WalkCMYKString	 end	} def			/ColorImageCompositeEmulator	{		pop true eq		{			Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat		}		{			Adobe_ColorImage_AI6_Vars /channelcount get 1 ne			{				Adobe_ColorImage_AI6_Vars begin					sourcearray 0 3 -1 roll put									channelcount 3 eq 					{ 						/RGBToGrayImageProc 					}					{ 						/CMYKToGrayImageProc					} ifelse					load			 end			} if			image		} ifelse	} def			/SeparateCMYKImageProc	{			Adobe_ColorImage_AI6_Vars begin				sourcecount 0 ne			{				sourcearray plateindex get exec			}			{							sourcearray 0 get exec								dup length 4 idiv string								0 2 index								plateindex 4 2 index length 1 sub				{					get 255 exch sub										3 copy put pop 1 add										2 index				} for					pop pop exch pop			} ifelse	 end	} def				/FourEqual	{		4 index ne		{			pop pop pop false		}		{			4 index ne			{				pop pop false			}			{				4 index ne				{					pop false				}				{					4 index eq				} ifelse			} ifelse		} ifelse	} def			/TestPlateIndex	{		Adobe_ColorImage_AI6_Vars begin			/plateindex -1 def				/setcmykcolor where			{				pop				gsave				1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub				0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub				0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub				0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub				grestore					1 0 0 0 FourEqual 				{ 					/plateindex 0 def				}				{					0 1 0 0 FourEqual					{ 						/plateindex 1 def					}					{						0 0 1 0 FourEqual						{							/plateindex 2 def						}						{							0 0 0 1 FourEqual							{ 								/plateindex 3 def							}							{								0 0 0 0 FourEqual								{									/plateindex 5 def								} if							} ifelse						} ifelse					} ifelse				} ifelse				pop pop pop pop			} if			plateindex	 end	} def			/colorimage	{		Adobe_ColorImage_AI6_Vars begin			/channelcount 1 index def			/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def				4 sourcecount add index dup 			8 eq exch 1 eq or not	 end				{			/_colorimage load null ne			{				_colorimage			}			{				Adobe_ColorImage_AI6_Vars /sourcecount get				7 add { pop } repeat			} ifelse		}		{			dup 3 eq			TestPlateIndex			dup -1 eq exch 5 eq or or			{				/_colorimage load null eq				{					ColorImageCompositeEmulator				}				{					dup 1 eq					{						pop pop image					}					{						Adobe_ColorImage_AI6_Vars /plateindex get 5 eq						{							gsave														0 _currenttransfer exec							1 _currenttransfer exec							eq							{ 0 _currenttransfer exec 0.5 lt }							{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse														{ { pop 0 } } { { pop 1 } } ifelse							systemdict /settransfer get exec						} if												_colorimage												Adobe_ColorImage_AI6_Vars /plateindex get 5 eq						{							grestore						} if					} ifelse				} ifelse			}			{				dup 1 eq				{					pop pop					image				}				{					pop pop						Adobe_ColorImage_AI6_Vars begin						sourcecount -1 0						{										exch sourcearray 3 1 roll put						} for							/SeparateCMYKImageProc load				 end						systemdict /image get exec				} ifelse			} ifelse		} ifelse	} def		/XI	{		Adobe_ColorImage_AI6_Vars begin			gsave			/XIMask exch 0 ne def			/XIBinary exch 0 ne def			pop			pop			/XIChannelCount exch def			/XIBitsPerPixel exch def			/XIImageHeight exch def			/XIImageWidth exch def			pop pop pop pop			/XIImageMatrix exch def						XIBitsPerPixel 1 eq			{				XIImageWidth 8 div ceiling cvi			}			{				XIImageWidth XIChannelCount mul			} ifelse			/XIBuffer exch string def						XIBinary			{				/XIDataProc { currentfile XIBuffer readstring pop } def				currentfile 128 string readline pop pop			}			{				/XIDataProc { currentfile XIBuffer readhexstring pop } def			} ifelse						0 0 moveto			XIImageMatrix concat			XIImageWidth XIImageHeight scale						XIMask			{				XIImageWidth XIImageHeight				false				[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]				/XIDataProc load								/_lp /null ddef				_fc				/_lp /imagemask ddef								imagemask			}			{				XIImageWidth XIImageHeight				XIBitsPerPixel				[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]				/XIDataProc load								XIChannelCount 1 eq				{										gsave					0 setgray										image										grestore				}				{					false					XIChannelCount					colorimage				} ifelse			} ifelse			grestore	 end	} def	end%%EndProcSet%%BeginResource: procset Adobe_Illustrator_AI5 1.1 0%%Title: (Adobe Illustrator (R) Version 5.0 Full Prolog)%%Version: 1.1 %%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1994 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 81 dict dup beginput/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_rise 0 def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fScl 0 def/_cnt 0 def/_hs 1 def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_wv 0 def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 91 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/sw{	dup length exch stringwidth	exch 5 -1 roll 3 index mul add	4 1 roll 3 1 roll mul add} def/swj{	dup 4 1 roll	dup length exch stringwidth	exch 5 -1 roll 3 index mul add	4 1 roll 3 1 roll mul add	6 2 roll /_cnt 0 ddef	{		1 index eq		{			/_cnt _cnt 1 add ddef		} if	} forall	pop	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop} def/ss{	4 1 roll	{		2 npop		(0) exch 2 copy 0 exch put pop		gsave		false charpath currentpoint		4 index setmatrix		stroke		grestore		moveto		2 copy rmoveto	} exch cshow	3 npop} def/jss{	4 1 roll	{		2 npop		(0) exch 2 copy 0 exch put		gsave		_sp eq		{			exch 6 index 6 index 6 index 5 -1 roll widthshow			currentpoint		}		{			false charpath currentpoint			4 index setmatrix stroke		} ifelse		grestore		moveto		2 copy rmoveto	} exch cshow	6 npop} def/sp{	{		2 npop (0) exch		2 copy 0 exch put pop		false charpath		2 copy rmoveto	} exch cshow	2 npop} def/jsp{	{		2 npop		(0) exch 2 copy 0 exch put		_sp eq		{			exch 5 index 5 index 5 index 5 -1 roll widthshow		}		{			false charpath		} ifelse		2 copy rmoveto	} exch cshow	5 npop} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		ashow	} ddef	/_pjsf	{		_fc		awidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		ashow	} ddef	/_pjsf	{		_fc		awidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		ashow	} ddef	/_pjsf	{		_fc		awidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer readline not		{		stop		} if		endString eq		{			cleartomark stop		} if	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer readline not		{		stop		} if		dup beginString eq		{			pop /layerCnt dup load 1 add store		}		{			endString eq			{				layerCnt 1 eq				{					cleartomark stop				}				{					/layerCnt dup load 1 sub store				} ifelse			} if		} ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	4 npop	6 1 roll	pop	4 1 roll	pop pop pop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 3 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popendendsetpacking%%EndResource%%EndProlog%%BeginSetup%%IncludeFont: HelveticaAdobe_level2_AI5 /initialize get execAdobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get execAdobe_ColorImage_AI6 /initialize get execAdobe_Illustrator_AI5 /initialize get exec[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronTE%AI3_BeginEncoding: _Helvetica Helvetica[/_Helvetica/Helvetica 0 0 1 TZ%AI3_EndEncoding AdobeType%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Yellow Stripe)(Yellow Stripe) 8.4499 4.6 80.4499 76.6 [%AI3_Tile(0 O 0 R 0 0.4 1 0 k 0 0.4 1 0 K) @(%AI6_BeginPatternLayer800 Ar0 J 0 j 3.6 w 4 M []0 d%AI3_Note:0 D0 XR8.1999 8.1999 m80.6999 8.1999 LS8.1999 22.6 m80.6999 22.6 LS8.1999 37.0001 m80.6999 37.0001 LS8.1999 51.3999 m80.6999 51.3999 LS8.1999 65.8 m80.6999 65.8 LS8.1999 15.3999 m80.6999 15.3999 LS8.1999 29.8 m80.6999 29.8 LS8.1999 44.1999 m80.6999 44.1999 LS8.1999 58.6 m80.6999 58.6 LS8.1999 73.0001 m80.6999 73.0001 LS%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp3 Bn%AI5_BeginGradient: (Black & White)(Black & White) 0 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br[0 0 50 100 %_Bs1 0 50 0 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Red & Yellow)(Red & Yellow) 0 2 Bd[0<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><FFFFFEFEFDFDFDFCFCFBFBFBFAFAF9F9F9F8F8F7F7F7F6F6F5F5F5F4F4F3F3F3F2F2F1F1F1F0F0EFEFEFEEEEEDEDEDECECEBEBEBEAEAE9E9E9E8E8E7E7E7E6E6E5E5E5E4E4E3E3E3E2E2E1E1E1E0E0DFDFDFDEDEDDDDDDDCDCDBDBDBDADAD9D9D9D8D8D7D7D7D6D6D5D5D5D4D4D3D3D3D2D2D1D1D1D0D0CFCFCFCECECDCDCDCCCCCBCBCBCACAC9C9C9C8C8C7C7C7C6C6C5C5C5C4C4C3C3C3C2C2C1C1C1C0C0BFBFBFBEBEBDBDBDBCBCBBBBBBBABAB9B9B9B8B8B7B7B7B6B6B5B5B5B4B4B3B3B3B2B2B1B1B1B0B0AFAFAFAEAEADADADACACABABABAAAAA9A9A9A8A8A7A7A7A6A6A5A5A5A4A4A3A3A3A2A2A1A1A1A0A09F9F9F9E9E9D9D9D9C9C9B9B9B9A9A9999>01 %_Br[0 1 0.6 0 1 50 100 %_Bs0 0 1 0 1 50 0 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Yellow & Blue Radial)(Yellow & Blue Radial) 1 2 Bd[<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><1415161718191A1B1C1D1E1F1F202122232425262728292A2A2B2C2D2E2F30313233343536363738393A3B3C3D3E3F40414142434445464748494A4B4C4D4D4E4F50515253545556575858595A5B5C5D5E5F60616263646465666768696A6B6C6D6E6F6F707172737475767778797A7B7B7C7D7E7F80818283848586868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A7A8A9A9AAABACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C9CACBCBCCCDCECFD0D1D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E2E3E4E5E6E7E8E9EAEBECEDEEEEEFF0F1F2F3F4F5F6F7F8F9F9FAFBFCFDFEFF><ABAAAAA9A8A7A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A9999989797969595949393929191908F8F8E8D8D8C8B8B8A8989888787868585848383828181807F7F7E7D7D7C7B7B7A7979787777767575747373727171706F6F6E6D6D6C6B6B6A6969686767666565646362626160605F5E5E5D5C5C5B5A5A5958585756565554545352525150504F4E4E4D4C4C4B4A4A4948484746464544444342424140403F3E3E3D3C3C3B3A3A3938383736363534343332323130302F2E2E2D2C2C2B2A2A29282827262625242423222121201F1F1E1D1D1C1B1B1A1919181717161515141313121111100F0F0E0D0D0C0B0B0A090908070706050504030302010100>01 %_Br[0 0.08 0.67 0 1 50 14 %_Bs1 1 0 0 1 50 100 %_BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_BeginPalette0 2 PbPnPc1 gPc0 gPc0 0 0 0 kPc0.75 gPc0.5 gPc0.25 gPc0 gPcBb2 (Black & White) -4014 4716 0 0 1 0 0 1 0 0 Bg0 BBPc0.25 0 0 0 kPc0.5 0 0 0 kPc0.75 0 0 0 kPc1 0 0 0 kPc0.25 0.25 0 0 kPc0.5 0.5 0 0 kPc0.75 0.75 0 0 kPc1 1 0 0 kPcBb2 (Red & Yellow) -4014 4716 0 0 1 0 0 1 0 0 Bg0 BBPc0 0.25 0 0 kPc0 0.5 0 0 kPc0 0.75 0 0 kPc0 1 0 0 kPc0 0.25 0.25 0 kPc0 0.5 0.5 0 kPc0 0.75 0.75 0 kPc0 1 1 0 kPcBb0 0 0 0 Bh2 (Yellow & Blue Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg0 BBPc0 0 0.25 0 kPc0 0 0.5 0 kPc0 0 0.75 0 kPc0 0 1 0 kPc0.25 0 0.25 0 kPc0.5 0 0.5 0 kPc0.75 0 0.75 0 kPc1 0 1 0 kPc(Yellow Stripe) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] pPc0.25 0.125 0 0 kPc0.5 0.25 0 0 kPc0.75 0.375 0 0 kPc1 0.5 0 0 kPc0.125 0.25 0 0 kPc0.25 0.5 0 0 kPc0.375 0.75 0 0 kPc0.5 1 0 0 kPc0 0 0 0 kPc0 0.25 0.125 0 kPc0 0.5 0.25 0 kPc0 0.75 0.375 0 kPc0 1 0.5 0 kPc0 0.125 0.25 0 kPc0 0.25 0.5 0 kPc0 0.375 0.75 0 kPc0 0.5 1 0 kPc0 0 0 0 kPc0.125 0 0.25 0 kPc0.25 0 0.5 0 kPc0.375 0 0.75 0 kPc0.5 0 1 0 kPc0.25 0 0.125 0 kPc0.5 0 0.25 0 kPc0.75 0 0.375 0 kPc1 0 0.5 0 kPc0 0 0 0 kPc0.25 0.125 0.125 0 kPc0.5 0.25 0.25 0 kPc0.75 0.375 0.375 0 kPc1 0.5 0.5 0 kPc0.25 0.25 0.125 0 kPc0.5 0.5 0.25 0 kPc0.75 0.75 0.375 0 kPc1 1 0.5 0 kPc0 0 0 0 kPc0.125 0.25 0.125 0 kPc0.25 0.5 0.25 0 kPc0.375 0.75 0.375 0 kPc0.5 1 0.5 0 kPc0.125 0.25 0.25 0 kPc0.25 0.5 0.5 0 kPc0.375 0.75 0.75 0 kPc0.5 1 1 0 kPc0 0 0 0 kPc0.125 0.125 0.25 0 kPc0.25 0.25 0.5 0 kPc0.375 0.375 0.75 0 kPc0.5 0.5 1 0 kPc0.25 0.125 0.25 0 kPc0.5 0.25 0.5 0 kPc0.75 0.375 0.75 0 kPc1 0.5 1 0 kPcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 255 79 79 Lb(Temp) LnLB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 0 79 128 255 Lb(Layer 1) Ln0 A1 Ap800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR520 142 m520 682 L100 682 L100 142 L520 142 L(n) *490 142 m490 682 L130 682 L130 142 L490 142 L(n) *0 R0 G0.8 w203 455 m203 506 L108 506 L108 455 L203 455 Ls1.6 w203 506 m203 455 LS236 506 m236 455 LS324 506 m324 455 LS423 506 m423 455 LS456 506 m456 455 LS0.8 w214 455 m214 506 L203 506 L203 455 L214 455 Ls225 455 m225 506 L214 506 L214 455 L225 455 Ls236 455 m236 506 L225 506 L225 455 L236 455 Ls247 455 m247 506 L236 506 L236 455 L247 455 Ls258 455 m258 506 L247 506 L247 455 L258 455 Ls269 455 m269 506 L258 506 L258 455 L269 455 Ls280 455 m280 506 L269 506 L269 455 L280 455 Ls291 455 m291 506 L280 506 L280 455 L291 455 Ls302 455 m302 506 L291 506 L291 455 L302 455 Ls313 455 m313 506 L302 506 L302 455 L313 455 Ls324 455 m324 506 L313 506 L313 455 L324 455 Ls335 455 m335 506 L324 506 L324 455 L335 455 Ls346 455 m346 506 L335 506 L335 455 L346 455 Ls357 455 m357 506 L346 506 L346 455 L357 455 Ls368 455 m368 506 L357 506 L357 455 L368 455 Ls379 455 m379 506 L368 506 L368 455 L379 455 Ls390 455 m390 506 L379 506 L379 455 L390 455 Ls401 455 m401 506 L390 506 L390 455 L401 455 Ls412 455 m412 506 L401 506 L401 455 L412 455 Ls423 455 m423 506 L412 506 L412 455 L423 455 Ls434 455 m434 506 L423 506 L423 455 L434 455 Ls445 455 m445 506 L434 506 L434 455 L445 455 Ls456 455 m456 506 L445 506 L445 455 L456 455 Ls490 455 m490 506 L456 506 L456 455 L490 455 Lsu0 Ap0.4 w202 448.8762 m202 447.84 201.16 447 200.124 447 C158.5849 447 L156.8813 447 155.5 445.6188 155.5 443.9151 C155.5 443.9151 L155.5 445.6188 154.119 447 152.4156 447 C110.8761 447 L109.8399 447 109 447.84 109 448.8762 cSUu422 448.8762 m422 447.84 421.16 447 420.124 447 C376.5849 447 L374.8813 447 373.5 445.6188 373.5 443.9151 C373.5 443.9151 L373.5 445.6188 372.119 447 370.4156 447 C326.8761 447 L325.8399 447 325 447.84 325 448.8762 cSUu455 448.8762 m455 447.84 454.16 447 453.124 447 C442.5849 447 L440.8813 447 439.5 445.6188 439.5 443.9151 C439.5 443.9151 L439.5 445.6188 438.119 447 436.4156 447 C425.8761 447 L424.8399 447 424 447.84 424 448.8762 cSUu489 448.8762 m489 447.84 488.16 447 487.124 447 C476.0849 447 L474.3813 447 473 445.6188 473 443.9151 C473 443.9151 L473 445.6188 471.619 447 469.9156 447 C458.8761 447 L457.8399 447 457 447.84 457 448.8762 cSUu235 448.8762 m235 447.84 234.16 447 233.124 447 C222.5849 447 L220.8813 447 219.5 445.6188 219.5 443.9151 C219.5 443.9151 L219.5 445.6188 218.119 447 216.4156 447 C205.8761 447 L204.8399 447 204 447.84 204 448.8762 cSUu323 448.8762 m323 447.84 322.16 447 321.124 447 C283.0849 447 L281.3813 447 280 445.6188 280 443.9151 C280 443.9151 L280 445.6188 278.619 447 276.9156 447 C238.8761 447 L237.8399 447 237 447.84 237 448.8762 cSU0 To1 0 0 1 108 511.5 0 TpTP0 Tr0 O0 g1 w/_Helvetica 8.5 Tf0 Ts100 Tz0 Tt1 TA%_ 0 XL36 0 XbXB0 0 5 TC100 100 200 TW0 0 0 Ti0 Ta0 0 2 2 3 Th0 Tq9 0 Tl0 Tc0 Tw(Bits) Tx(\r) TX TO0 To1 0 0 1 155.5 511.5 0 TpTP-2.3626 0 Td0 Tr1 Ta(9) Tx(\r) TX TO0 To1 0 0 1 219.5 511.5 0 TpTP-2.3626 0 Td0 Tr(3) Tx(\r) TX TO0 To1 0 0 1 274.5 511.5 0 TpTP-2.3626 0 Td0 Tr(8) Tx(\r) TX TO0 To1 0 0 1 362.5 511.5 0 TpTP-2.3626 0 Td0 Tr(9) Tx(\r) TX TO0 To1 0 0 1 439.5 511.5 0 TpTP-2.3626 0 Td0 Tr(3) Tx(\r) TX TO0 To1 0 0 1 473 511.5 0 TpTP-2.3626 0 Td0 Tr(4) Tx(\r) TX TO0 To1 0 0 1 155.5 477.5 0 TpTP-34.2397 0 Td0 Tr(NEXT_ADDRESS) Tx(\r) TX TO0 To1 0 0 1 155.5 434 0 TpTP-8.9742 0 Td0 Tr(Addr) Tx(\r) TX TO0 To1 0 0 1 219.5 434 0 TpTP-8.4149 0 Td0 Tr(J) Tx 1 20 Tk(MP) Tx(\r) TX TO0 To1 0 0 1 280 434 0 TpTP-8.2655 0 Td0 Tr(ALU) Tx(\r) TX TO0 To1 0 0 1 373.5 434 0 TpTP-3.0682 0 Td0 Tr(C) Tx(\r) TX TO0 To1 0 0 1 439.5 434 0 TpTP-9.4411 0 Td0 Tr(Mem) Tx(\r) TX TO0 To1 0 0 1 473 434 0 TpTP-2.8347 0 Td0 Tr(B) Tx(\r) TX TO0 To1 0 0 1 439.5 495 0 TpTP-3.0682 0 Td0 Tr(R\r) Tx0.2335 -9 Td(E\r) TxT*(A\r) Tx-0.2335 -9 Td(D) Tx(\r) TX TO0 To1 0 0 1 450.5 495 0 TpTP-2.5961 0 Td0 Tr6.8 0 Tl(F\r) Tx-0.2386 -6.8 Td(E\r) Tx0.2386 -6.8 Td(T\r) Tx-0.4721 -6.8 Td(C\r) TxT*(H) Tx(\r) TX TO0 To1 0 0 1 219.5 495 0 TpTP-2.125 0 Td0 Tr9 0 Tl(J\r) Tx-0.7097 -9 Td(M\r) Tx-0.7045 -9 Td(P\r) Tx0.4711 -9 Td(N) Tx(\r) TX TO0 To1 0 0 1 208.5 495 0 TpTP-2.125 0 Td0 Tr(J\r) Tx-1.4142 -9 Td(M\r) Tx0.7045 -9 Td(P\r) Tx-0.2335 -9 Td(C) Tx(\r) TX TO0 To1 0 0 1 230.5 495 0 TpTP-2.125 0 Td0 Tr(J\r) Tx-0.7097 -9 Td(M\r) Tx-0.7045 -9 Td(P\r) Tx0.9432 -9 Td(Z) Tx(\r) TX TO0 To1 0 0 1 241.5 495 0 TpTP-2.8347 0 Td0 Tr(S\r) Tx0.4721 -9 Td(L\r) TxT*(L\r) TxT*(8) Tx(\r) TX TO0 To1 0 0 1 252.5 495 0 TpTP-2.8347 0 Td0 Tr(S\r) Tx-0.2335 -9 Td(R\r) Tx0.2335 -9 Td(A\r) Tx0.4721 -9 Td(1) Tx(\r) TX TO0 To1 0 0 1 263.5 495 0 TpTP-4.2638 0 Td0 Tr(F) Tx/_Helvetica 6 Tf-1.5 Ts(0) Tx(\r) TX TO0 To1 0 0 1 274.5 495 0 TpTP-4.2638 0 Td0 Tr/_Helvetica 8.5 Tf0 Ts(F) Tx/_Helvetica 6 Tf-1.5 Ts(1) Tx(\r) TX TO0 To1 0 0 1 285.5 495 0 TpTP-2.8347 0 Td0 Tr/_Helvetica 8.5 Tf0 Ts(E\r) Tx-0.2335 -9 Td(N\r) Tx0.2335 -9 Td(A) Tx(\r) TX TO0 To1 0 0 1 296.5 495 0 TpTP-2.8347 0 Td0 Tr(E\r) Tx-0.2335 -9 Td(N\r) Tx0.2335 -9 Td(B) Tx(\r) TX TO0 To1 0 0 1 307.5 495 0 TpTP-1.1808 0 Td0 Tr(I\r) Tx-1.8874 -9 Td(N\r) Tx0.2335 -9 Td(V\r) TxT*(A) Tx(\r) TX TO0 To1 0 0 1 318.5 495 0 TpTP-1.1808 0 Td0 Tr(I\r) Tx-1.8874 -9 Td(N\r) TxT*(C) Tx(\r) TX TO0 To1 0 0 1 329.5 495 0 TpTP-3.0682 0 Td0 Tr(H) Tx(\r) TX TO0 To1 0 0 1 340.5 495 0 TpTP-3.3058 0 Td0 Tr(O\r) Tx0.4711 -9 Td(P\r) Tx-0.2335 -9 Td(C) Tx(\r) TX TO0 To1 0 0 1 351.5 495 0 TpTP-2.5961 0 Td0 Tr(T\r) Tx-0.7097 -9 Td(O\r) Tx0.4711 -9 Td(S) Tx(\r) TX TO0 To1 0 0 1 362.5 495 0 TpTP-3.0682 0 Td0 Tr(C\r) Tx0.2335 -9 Td(P\r) TxT*(P) Tx(\r) TX TO0 To1 0 0 1 373.5 495 0 TpTP-2.3626 0 Td0 Tr(L\r) Tx-0.4721 -9 Td(V) Tx(\r) TX TO0 To1 0 0 1 384.5 495 0 TpTP-2.8347 0 Td0 Tr(S\r) TxT*(P) Tx(\r) TX TO0 To1 0 0 1 395.5 495 0 TpTP-2.8347 0 Td0 Tr(P\r) Tx-0.2335 -9 Td(C) Tx(\r) TX TO0 To1 0 0 1 406.5 495 0 TpTP-3.5392 0 Td0 Tr(M\r) Tx0.4711 -9 Td(D\r) TxT*(R) Tx(\r) TX TO0 To1 0 0 1 417.5 495 0 TpTP-3.5392 0 Td0 Tr(M\r) Tx0.7045 -9 Td(A\r) Tx-0.2335 -9 Td(R) Tx(\r) TX TO0 To1 0 0 1 428.5 495 0 TpTP-4.0113 0 Td0 Tr6.8 0 Tl(W\r) Tx0.9432 -6.8 Td(R\r) Tx1.8874 -6.8 Td(I\r) Tx-1.4153 -6.8 Td(T\r) Tx-0.2386 -6.8 Td(E) Tx(\r) TX TO0 To1 0 0 1 467.5 481 0 TpTP0 Tr0 Ta9 0 Tl(B\r) TxT*(b) Tx 1 20 Tk(us) Tx(\r) TX TO0 To1 0 0 1 402.5 409 0 TpTP0 Tr(B b) Tx 1 20 Tk(us registers) Tx(\r) TX TO0 To1 0 0 1 402.5 392 0 TpTP0 Tr(0 = MDR\r) TxT*(1 = PC\r) TxT*(2 = MBR\r) TxT*(3 = MBR) Tx 1 40 Tk(U\r) TxT*(4 = SP) Tx(\r) TX TO0 To1 0 0 1 451.25 392 0 TpTP0 Tr(5 = L) Tx 1 110 Tk(V\r) TxT*(6 = CPP\r) TxT*(7 = ) Tx 1 50 Tk(T) Tx 1 40 Tk(OS\r) TxT*(8 = OPC\r) TxT*(9) Tx 0 -144 Tk(-15 none) Tx(\r) TX TOLB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_ColorImage_AI6 /terminate get execAdobe_typography_AI5 /terminate get execAdobe_level2_AI5 /terminate get exec%%EOF